<project default="jar:jar"
         xmlns:ant="jelly:ant" 
         xmlns:castor="castor"
         xmlns:define="jelly:define"
         xmlns:j="jelly:core"
         xmlns:license="license" 
         xmlns:maven="jelly:maven"
         xmlns:proxygen="proxygen"
         xmlns:util="jelly:util">

  <!-- ==================================================================== -->
  <!-- Generates java sources using castor                                  -->
  <!-- ==================================================================== -->
  <goal name="generate-castor-srcs">
    <attainGoal name="castor:prepare-filesystem"/>
    <castor:generate schema="${schema.dir}/connector.xsd"
                     package="org.exolab.jms.config"
                     types="j2"/>\
    <castor:generate schema="${schema.dir}/openjms.xsd"
                     package="org.exolab.jms.config"
                     types="j2"/>
  </goal>

  <!-- ==================================================================== -->
  <!-- Generates sources prior to compilation                               -->
  <!-- ==================================================================== -->
  <preGoal name="java:compile">
    <attainGoal name="generate-castor-srcs"/>
  </preGoal>

  <!-- ==================================================================== -->
  <!-- Generates proxies                                                    -->
  <!-- ==================================================================== -->
  <postGoal name="java:compile">
    <attainGoal name="proxies"/>
  </postGoal>

  <goal name="proxies" prereqs="proxygen:prepare-filesystem">
    <j:set var="JMSExceptionAdapter" 
           value="org.exolab.jms.client.net.JMSExceptionAdapter"/>
    <j:set var="XAExceptionAdapter"
           value="org.exolab.jms.client.net.XAExceptionAdapter"/>

    <proxygen:gen 
        classname="org.exolab.jms.server.net.RemoteServerConnectionFactory"
        adapters="${JMSExceptionAdapter}"/>
    <proxygen:gen classname="org.exolab.jms.server.net.RemoteServerConnection"
                  adapters="${JMSExceptionAdapter}"/>
    <proxygen:gen classname="org.exolab.jms.server.net.RemoteServerSession"
                  adapters="${JMSExceptionAdapter},${XAExceptionAdapter}"/>
    <proxygen:gen classname="org.exolab.jms.server.net.RemoteNamingProvider"/>
    <proxygen:gen classname="org.exolab.jms.server.net.JmsAdminServerImpl"/>
    <proxygen:gen classname="org.exolab.jms.server.net.JmsAdminConnectionImpl"/>
    <proxygen:gen classname="org.exolab.jms.client.net.JmsSessionStubImpl"/>
  </goal>

  <!-- ==================================================================== -->
  <!-- Replaces tags in resources                                           -->
  <!-- ==================================================================== -->
  <postGoal name="java:jar-resources">
    <tstamp/>

    <replace dir="${maven.build.dest}" includes="**/openjms.version">
      <replacefilter token="@VERSION@" value="${pom.currentVersion}"/>
      <replacefilter token="@MAJOR_VERSION@" value="${openjms.version.major}"/>
      <replacefilter token="@MINOR_VERSION@" value="${openjms.version.minor}"/>
      <replacefilter token="@DATE@" value="${TODAY}" />
      <replacefilter token="@TIME@" value="${TSTAMP}" />
      <replacefilter token="@TITLE@" value="OpenJMS" />
      <replacefilter token="@VENDOR_NAME@" value="${pom.organization}"/>
      <replacefilter token="@VENDOR_URL@" value="${pom.organization.url}"/>
      <replacefilter token="@COPYRIGHT@" value="${openjms.copyright}"/>
    </replace>
  </postGoal>

  <!-- ==================================================================== -->
  <!-- Generates the Class-Path manifest entry for the jar:jar goal         -->
  <!-- ==================================================================== -->
  <preGoal name="jar:jar">
    <j:forEach var="dep" items="${pom.dependencies}">
      <j:if test="${dep.getProperty('classpath')=='true'}">
        <j:set var="openjms.server.classpath" 
               value="${openjms.server.classpath} ${dep.artifact}"/>
      </j:if>
    </j:forEach>

    <j:set var="maven.jar.manifest" value="${maven.build.dir}/MANIFEST.MF"/>
    <manifest file="${maven.jar.manifest}">
      <attribute name="Class-Path" value="${openjms.server.classpath}"/>
    </manifest>

  </preGoal>

</project>
